Notes
-----
Make migration after installing new app or doing some major change in the settings.py file.


Initial
-------
prompt $g
conda activate env_pyblog
conda deactivate


Env Initialization
------------------
conda create --name env_pyblog python=3.7

Inside env:
conda install django=2.1
Check version: python -m django --version
conda remove --name env_pyblog --all

List all packages in the current environment:
conda list

Save packages for future use:
conda list --export > packages.txt

Reinstall packages from an export file:
conda create -n env_pyblog --file packages.txt


Installed Packages
------------------
Libary for linting:
pip install flake8

Libraries for user authentication:
pip install bcrypt
pip install django[argon2]

Library for pictures:
pip install pillow
If you get any error like jpeg support disabled:
pip install pillow --global-option="build_ext" --global-option="--disable-jpeg"


New Terminal > prompt $g

conda activate env_pyblog
django-admin startproject django_project
django-admin startapp blog
python manage.py runserver


Create the folders in the root directory:
-----------------------------------------
templates, static, media


Edit the settings.py in the project directory:
----------------------------------------------
TEMPLATE_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, "static")
MEDIA_DIR = os.path.join(BASE_DIR, 'media')

INSTALLED_APPS = [
    ...
    'blog',
]
TEMPLATES = [
    {
        ...
        'DIRS': [TEMPLATE_DIR],
        ...
    },
]
PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
]
AUTH_PASSWORD_VALIDATORS = [
    ...
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS':{'min_length':9}
    },
    ...
]

STATICFILES_DIRS = [STATIC_DIR]

# Media files (Uploaded by the users)
MEDIA_URL = '/media/'
MEDIA_ROOT = MEDIA_DIR

# Login URL for the users
LOGIN_URL = '/blog/user_login/'


Migration
---------
python manage.py migrate
python manage.py makemigrations blog
python manage.py migrate

python manage.py shell
from first_app.models import Topic
t = Topic(topic_name="Social Network")
t.save()
print(Topic.objects.all())
print(t)


Create Super User
-----------------
python manage.py createsuperuser